services:
  postgres-users:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      - postgres_users_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  postgres-accounts:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      -  postgres-accounts_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  postgres-transactions:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      -  postgres-transactions_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres-users
      - postgres-accounts
      - postgres-transactions

  mongodb-histories:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodbpwd
    volumes:
      - mongodb_histories_data:/data/db

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: history-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongodb
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongodbpwd
      ME_CONFIG_MONGODB_SERVER: mongodb-histories

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  authserver:
    build:
      context: .
      dockerfile: ./scr/AuthServer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5001:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/.well-known/openid-configuration"]
      interval: 5s
      timeout: 20s
      retries: 10

  accountservice:
    build:
      context: .
      dockerfile: scr/AccountService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5002:8080"
    depends_on:
      authserver:
        condition: service_healthy

  transactionservice:
    build:
      context: .
      dockerfile: scr/TransactionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5003:8080"
    depends_on:
      authserver:
        condition: service_healthy

  historyservice:
    build:
      context: .
      dockerfile: scr/HistoryService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5004:8080"
    depends_on:
      authserver:
        condition: service_healthy

  apigateway:
    build:
      context: .
      dockerfile: scr/ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5000:8080"
    depends_on:
      authserver:
        condition: service_healthy

volumes:
  postgres_users_data:
  postgres-accounts_data:
  postgres-transactions_data:
  mongodb_histories_data: