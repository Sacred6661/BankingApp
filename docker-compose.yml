services:
  postgres-users:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      - postgres_users_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  postgres-accounts:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      - postgres-accounts_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  postgres-transactions:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      - postgres-transactions_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"

  postgres-profile:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      - postgres-profile_data:/var/lib/postgresql/data
    ports:
      - "5436:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres-users
      - postgres-accounts
      - postgres-transactions
      - postgres-profile

  mongodb-histories:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodbpwd
    volumes:
      - mongodb_histories_data:/data/db

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: history-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongodb
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongodbpwd
      ME_CONFIG_MONGODB_SERVER: mongodb-histories

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  authserver:
    build:
      context: .
      dockerfile: ./scr/AuthServer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5001:8080"
    volumes:
      - authserver_logs:/app/logs

  accountservice:
    build:
      context: .
      dockerfile: scr/AccountService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5002:8080"
    depends_on:
      - authserver
      - postgres-users
    volumes:
      - accountservice_logs:/app/logs

  transactionservice:
    build:
      context: .
      dockerfile: scr/TransactionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5003:8080"
    depends_on:
      - authserver
      - postgres-transactions
    volumes:
      - transactionservice_logs:/app/logs

  historyservice:
    build:
      context: .
      dockerfile: scr/HistoryService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5004:8080"
    depends_on:
      - authserver
      - mongodb-histories
    volumes:
      - historyservice_logs:/app/logs

  apigateway:
    build:
      context: .
      dockerfile: scr/ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "5000:8080"
    depends_on:
      - authserver
    volumes:
      - apigateway_logs:/app/logs
  
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.0
    container_name: filebeat
    user: root
    volumes:
      # local logs (when localhost is using)
      - ./scr/AccountService/bin/Debug/net8.0/logs:/logs/accountservice-local:ro
      - ./scr/TransactionService/bin/Debug/net8.0/logs:/logs/transactionservice-local:ro
      - ./scr/HistoryService/bin/Debug/net8.0/logs:/logs/historyservice-local:ro
      - ./scr/AuthServer/bin/Debug/net8.0/logs:/logs/authserver-local:ro
      - ./scr/ApiGateway/bin/Debug/net8.0/logs:/logs/apigateway-local:ro

      # containers logs (when using docker)
      - accountservice_logs:/logs/accountservice:ro
      - transactionservice_logs:/logs/transactionservice:ro
      - historyservice_logs:/logs/historyservice:ro
      - authserver_logs:/logs/authserver:ro
      - apigateway_logs:/logs/apigateway:ro

      # config
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    depends_on:
      - elasticsearch
    command: filebeat -e -strict.perms=false

volumes:
  postgres_users_data:
  postgres-accounts_data:
  postgres-transactions_data:
  postgres-profile_data:
  mongodb_histories_data:
  es_data:
  accountservice_logs:
  transactionservice_logs:
  historyservice_logs:
  authserver_logs:
  apigateway_logs:
